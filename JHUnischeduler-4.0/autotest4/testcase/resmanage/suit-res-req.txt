*** Settings ***
Suite Setup       preSuite    spooler/conf/conf-res-req
Suite Teardown    postSuite
Library           /apps/autotest4/lib/clusterKeyword.py
Library           /apps/autotest4/lib/clusterLib.py
Library           /apps/autotest4/lib/common.py
Library           /apps/autotest4/lib/hostKeyword.py
Library           /apps/autotest4/lib/hostLib.py
Library           /apps/autotest4/lib/hostsConfLib.py
Library           /apps/autotest4/lib/jobKeyword.py
Library           /apps/autotest4/lib/jobLib.py
Library           /apps/autotest4/lib/myUtils.py
Library           /apps/autotest4/lib/OperatingSystem.py
Library           /apps/autotest4/lib/queueKeyword.py
Library           /apps/autotest4/lib/queueLib.py
Library           /apps/autotest4/lib/paramsConfLib.py
Library           /apps/autotest4/lib/queuesConfLib.py
Library           /apps/autotest4/lib/retry.py
Library           /apps/autotest4/lib/schedulerConfLib.py
Library           /apps/autotest4/lib/userGroupKeyword.py
Library           /apps/autotest4/lib/userGroupLib.py
Library           /apps/autotest4/lib/userKeyword.py
Library           /apps/autotest4/lib/usersConfLib.py
Library           /apps/autotest4/lib/userLib.py

*** Test Cases ***
case1.bug10833jsub -R 使用order指定内置资源，并在队列中配置HOSTS。
    [Tags]    p1    bug    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    sleep    20
    ${hostall}    runCommand    jhosts -l
    log    ${hostall}
    ${job1}    querySubmitInfo    su user1 -c "jsub -q resreq1 -R 'order[ut]' -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    runCommand    su user1 -c "jctrl kill ${jobid1}"
    sleep    2
    ${job2}    querySubmitInfo    su user1 -c "jsub -R 'order[-ut]' -n 2 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    killDefault
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case2.通过jsub -R使用order指定内置资源，队列配置HOSTS，并在提交作业指定-m。
    [Tags]    p1    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    sleep    5
    ${job1}    querySubmitInfo    su user1 -c "jsub -q resreq1 -R 'order[ut]' -m rhela1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    runCommand    su user1 -c "jctrl kill ${jobid1}"
    sleep    2
    ${info}    runCommand    jhosts -l rhela1 rhelb
    log    ${info}
    ${job2}    querySubmitInfo    su user1 -c "jsub -q resreq1 -R 'order[-ut]' -m 'rhelb rhela1' sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    killDefault
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case3.bug10833通过jsub -R使用order指定内置资源，队列配置HOSTS，并在提交作业指定-m。
    [Tags]    p1    long-time    docker-not-run    bug-random
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    sleep    10
    ${job1}    querySubmitInfo    su user1 -c "jsub -q resreq2 -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    killDefault
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case4.在队列中同时配置order和HOSTS（指定节点）
    [Tags]    p1    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    addOrModifyHostGroup    group1    (rhela1 rhelb)
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    sleep    10
    ${job1}    querySubmitInfo    su user1 -c "jsub -q resreq2 -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Contain    ${host1}    rhelb
    Should Not Contain    ${host1}    rhela1
    killDefault
    [Teardown]    delHostGroupAndHost    group1    rhela1=1 ()    rhelb=1 ()

case5.bug10833jsub -R 使用order同时指定mem，ut（当mem相同时，根据-ut排序）。
    [Tags]    p1    bug    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostslots}    runCommand    jhosts
    log    ${hostslots}
    ${host0}    ${host00}    compareMem    rhela1    rhelb
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'order[mem]' -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Contain    ${host1}    ${host0}
    Should Not Contain    ${host1}    ${host00}
    runCommand    su user1 -c "jctrl kill ${jobid1}"
    sleep    2
    ${job2}    querySubmitInfo    su user1 -c "jsub -R 'order[-mem]' -n 2 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Contain    ${host2}    ${host00}
    Should Not Contain    ${host2}    ${host0}
    killDefault
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case6.bug10833jsub -R 使用order指定res1,ut。
    [Tags]    p1    bug    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    sleep    20
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'order[res1:-ut]' -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    killDefault
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case7.jsub -R指定boolean型资源cs，select[!cs]。
    [Tags]    p1    long-time
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 (cs)
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'cs' -n 1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -R '!cs' -n 1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    ${job3}    querySubmitInfo    su user1 -c "jsub -R '!cs' -n 2 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid3}    PEND
    sleep    4
    ${job3a}    queryJobInfo    ${jobid3}
    ${pendinfo}    getJobPndRsn    ${job3a}
    log    ${pendinfo}
    Should Contain    ${pendinfo}    Not enough job slot(s): 1 host;
    Should Contain    ${pendinfo}    Job's resource requirements not satisfied: 1 host;
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case8.bug11817select指定单个资源>,<,>=,<=。
    [Tags]    p1    long-time    bug
    [Setup]    readyTest
    addOrModifyHost    rhela1    7 ()
    addOrModifyHost    rhelb    7 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c 'jsub -m rhelb -R "rusage[res2=7]" -n 1 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c 'jsub -m rhela1 -R "rusage[res2=8]" -n 1 sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    ${job3}    querySubmitInfo    su user1 -c 'jsub -R "select[res2<=2]" -n 1 sleep 1000'
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid1}    RUN
    ${job4}    querySubmitInfo    su user1 -c 'jsub -R "select[res2>=3]" -n 1 sleep 1000'
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid1}    RUN
    ${job5}    querySubmitInfo    su user1 -c 'jsub -R "select[res2>2]" -n 4 sleep 1000'
    ${jobid5}    getJobId    ${job5}
    ${job6}    querySubmitInfo    su user1 -c 'jsub -R "select[res2>3]" -n 1 sleep 1000'
    ${jobid6}    getJobId    ${job6}
    ${job7}    querySubmitInfo    su user1 -c 'jsub -R "select[res2<2]" -n 1 sleep 1000'
    ${jobid7}    getJobId    ${job7}
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    RUN
    checkJobStatus    ${jobid5}    RUN
    checkJobStatus    ${jobid6}    PEND
    checkJobStatus    ${jobid7}    PEND
    ${job6a}    queryJobInfo    ${jobid6}
    ${pendinfo}    getJobPndRsn    ${job6a}
    log    ${pendinfo}
    Should Contain    ${pendinfo}    Job's resource requirements not satisfied: 2 hosts
    ${job7a}    queryJobInfo    ${jobid7}
    ${pendinfo1}    getJobPndRsn    ${job7a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Job's resource requirements not satisfied: 2 hosts
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case9.bug11817select指定||，当一个条件不满足是，选择符合第二个条件的。
    [Tags]    p1    long-time    bug
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    4 (cs)
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c 'jsub -m rhelb -R "rusage[res2=7]" -n 1 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c 'jsub -R "select[res2>2||res1>1]span[ptile=1]" -n 2 sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c 'jsub -R "select[cs||res2>5]" -n 1 sleep 1000'
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid3}    RUN
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job4}    querySubmitInfo    su user1 -c 'jsub -R "select[res2<1||cs]" \ sleep 1000'
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid4}    RUN
    @{host2}    getAndCheckJobExecHost    ${jobid2}
    ${string1}=    Catenate    @{host2}
    log    ${string1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${host4}    getAndCheckJobExecHost    ${jobid4}
    Should Be Equal    ${host4}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case10.bug11817select指定&&，表示两个条件必须同时满足。
    [Tags]    p1    long-time    bug
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    4 (cs)
    jadminJhdsSched
    checkClusterStatus
    ${job2}    querySubmitInfo    su user1 -c 'jsub -R "select[res2<1&&res1>1]" -n 2 sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    ${job3}    querySubmitInfo    su user1 -c 'jsub -R "select[res2>5&&cs]" -n 1 sleep 1000'
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid3}    RUN
    sleep    3
    ${job2a}    queryJobInfo    ${jobid2}
    ${pendinfo1}    getJobPndRsn    ${job2a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Job's resource requirements not satisfied: 2 hosts
    ${host3}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host3}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case11.select指定&&，指定-m。
    [Tags]    p1    long-time
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    4 (cs)
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c 'jsub \ -m rhela1 -R "select[res2>1&&cs]" -n 2 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    PEND
    sleep    3
    ${job1a}    queryJobInfo    ${jobid1}
    ${pendinfo1}    getJobPndRsn    ${job1a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    ob's resource requirements not satisfied: 1 host
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case12.bug11121队列上指定select[res3>1].
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${res3info}    checkHostResTotal    rhela1    res3    3
    log    ${res3info}
    ${res3info1}    checkHostResTotal    rhelb    res3    0
    log    ${res3info1}
    sleep    30
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq4 \ -n 2 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    ${job2}    querySubmitInfo    su user1 -c 'jsub -q resreq4 \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    sleep    3
    ${job2a}    queryJobInfo    ${jobid2}
    ${pendinfo1}    getJobPndRsn    ${job2a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Job slot limit reached: 1 host
    Should Contain    ${pendinfo1}    Queue's resource requirements not satisfied: 1 host
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case13.队列上指定RES_REQ=select[!cs]
    [Tags]    p1    long-time
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 (cs)
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq5 \ -n 2 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${job2}    querySubmitInfo    su user1 -c 'jsub -q resreq5 \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    sleep    3
    ${job2a}    queryJobInfo    ${jobid2}
    ${pendinfo1}    getJobPndRsn    ${job2a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Job slot limit reached: 1 host
    Should Contain    ${pendinfo1}    Queue's resource requirements not satisfied: 1 host
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case14.bug11817 队列上指定RES_REQ=select[cs&&res2>5].
    [Tags]    p1    long-time    bug
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 (fs)
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${res2info}    checkHostResTotal    rhela1    res2    10
    log    ${res2info}
    ${res2info1}    checkHostResTotal    rhelb    res2    10
    log    ${res2info1}
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq6 \ \ sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    PEND
    sleep    3
    ${job1a}    queryJobInfo    ${jobid1}
    ${pendinfo1}    getJobPndRsn    ${job1a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Queue's resource requirements not satisfied: 2 hosts
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case15.队列上指定RES_REQ=select[cs&&res2>5].
    [Tags]    p1    long-time
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 (cs)
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -R 'cs'
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq7 \ \ sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case16.11121同时指定作业和队列时，不同资源是，需要同时满足RES_REQ.
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 (cs)
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res3    3
    checkHostResTotal    rhelb    res3    0
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq8 -R "select[cs]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c 'jsub -q resreq8 sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    sleep    3
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host1}    rhelb
    Should Be Equal    ${host2}    rhela1
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case17.11121同时指定队列和-R，指定相同的资源，作业级覆盖队列级.
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 (cs)
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res3    3
    checkHostResTotal    rhelb    res3    0
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -q resreq9 -R "select[res3<1&&cs]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c 'jsub -q resreq9 -R "select[cs]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhelb
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case18.当集群中有多个节点满足作业的ptile时，根据节点的负载ut排序。
    [Tags]    p1    long-time    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    6 ()
    addOrModifyHost    rhelb    5 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 3 -R "span[ptile=3]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    log    ${host1}
    Should Contain    ${host1}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case19.当集群中有多个节点满足作业的ptile时，节点的可用slots=n,但是slots<ptile.
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    5 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 5 -R "span[ptile=8]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    log    ${host1}
    Should Contain    ${host1}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case20.xwf当集群中有多个节点满足作业的ptile时，节点的可用slots=n,但是slots<ptile.
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    5 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 4 -R "span[ptile=8]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    log    ${host1}
    Should Contain    ${host1}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case21.当作业请求processor能够整除ptile。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 4 -R "span[ptile=2]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    CheckJobStatus    ${jobid1}    PEND
    ${job1a}    queryJobInfo    ${jobid1}
    ${pendinfo1}    getJobPndRsn    ${job1a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Not enough processors to meet the job's spanning requirement: 2 hosts
    [Teardown]    modHostInfo    rhelb=1 ()

case22.队列上配置RES_REQ=span[ptile=4],配置proclimit。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub \ -q resreq12 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Contain    ${host1}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case23.队列上配置RES_REQ=span[hosts=1]。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    5 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 6 -q resreq10 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    CheckJobStatus    ${jobid1}    PEND
    ${job1a}    queryJobInfo    ${jobid1}
    ${pendinfo1}    getJobPndRsn    ${job1a}
    log    ${pendinfo1}
    Should Contain    ${pendinfo1}    Not enough processors to meet the queue's spanning requirement: 2 hosts
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case24.提交作业指定span[hosts=1] order[res5],当有多个节点满足是，节点按照res3排序。
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    5 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 2 -q resreq13 -R "span[hosts=1] order[res5]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    CheckJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Contain    ${host1}    rhela1
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case25.队列上配置HOSTS=hostname+优先级。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 2 -R "span[hosts=1]" -q resreq11 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    CheckJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Contain    ${host1}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case26.提交作业时，使用rusage资源请求串中预留内置资源。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub \ -R 'rusage[mem=50]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${hostall}    runCommand    jhosts -l
    log    ${hostall}
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    checkRusageValue    50    ${resv1}    ${used1}
    [Teardown]    killJob

case27.提交作业时，使用rusage资源请求串中预留内置资源中包含&&。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -R 'rusage[mem=50&&tmp=50]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${hostall}    runCommand    jhosts -l
    log    ${hostall}
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    tmp
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    0
    [Teardown]    killJob

case28.提交并行作业时，使用rusage资源请求串中预留内置资源||。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -R 'rusage[mem=1000000000||tmp=30]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    tmp
    ${resv2}    getHostReserved    ${host1}    mem
    checkRusageValue    60    ${resv1}    0
    checkRusageValue    0    ${resv2}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case29.提交并行作业时，span[hosts=1]使用rusage资源请求串中预留内置资源两个||。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -R 'rusage[swap=10&&mem=1000000000||tmp=30]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    tmp
    ${resv2}    getHostReserved    ${host1}    swap
    ${resv3}    getHostReserved    ${host1}    mem
    checkRusageValue    60    ${resv1}    0
    checkRusageValue    0    ${resv2}    0    0
    checkRusageValue    0    ${resv3}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case30.bug11121提交作业时，使用rusage资源请求串中预留静态共享资源res4.
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res4    16
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m rhela1 -R 'rusage[res4=16]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${exechost1}    rhela1
    ${resv1}    getStatShareResResv    res4
    ${totle1}    getStatShareResTotal    res4
    checkRusageValue    16    ${resv1}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case31.bug11121提交作业时，使用rusage资源请求串中预留静态共享资源res4,并指定ptile=1.
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res4    16
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m 'rhela1 rhelb' \ -R 'span[ptile=1] rusage[res4=13]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${resv1}    getStatShareResResv    res4
    ${totle1}    getStatShareResTotal    res4
    checkRusageValue    13    ${resv1}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case32.bug11121提交作业时，使用rusage资源请求串中预留动态共享资源res1.
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res1    3
    log    ${resinfo}
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m rhelb \ -R 'rusage[res1=3]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${resinfo1}    runCommand    jhosts -s
    log    ${resinfo1}
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    checkRusageValue    3    ${resv1}    0    0
    checkRusageValue    3    ${totle1}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case33.bug11121不同的作业控制，作业的资源预留和释放jctrl kill.
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res1    3
    log    ${resinfo}
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m rhelb \ -R 'rusage[res1=3]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${resinfo1}    runCommand    jhosts -s
    log    ${resinfo1}
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${resv1}    getStatShareResResv    res1
    ${total1}    getStatShareResTotal    res1
    ${resinfoa}    runCommand    jhosts -s
    log    ${resinfoa}
    checkRusageValue    3    ${resv1}    0    0
    checkRusageValue    3    ${total1}    0    0
    ${killinfo}    runCommand    su jhadmin -c "jctrl kill ${jobid1}"
    log    ${killinfo}
    sleep    4
    ${resv1}    getStatShareResResv    res1
    ${total1}    getStatShareResTotal    res1
    checkRusageValue    0    ${resv1}    0    0
    checkRusageValue    3    ${total1}    0    0
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case34.队列级rusage资源请求。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -q resreq14 \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    tmp
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    [Teardown]    killJob

case35.同时配置作业级和队列级res_req，作业的res_req以作业级为主。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -q resreq15 -R 'rusage[mem=100]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    checkRusageValue    100    ${resv1}    ${used1}
    [Teardown]    killJob

case36.提交作业时，使用rusage资源请求串中预留多个内置资源。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -R 'rusage[tmp=50&&mem=50&&swap=50]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${used2}    getAndCheckJobRusageInfo    ${jobid1}    SWAP
    log    ${used2}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    swap
    ${resv3}    getHostReserved    ${host1}    tmp
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    ${used2}
    checkRusageValue    50    ${resv3}    0    0
    [Teardown]    killJob

case37.提交并行作业时，跨节点使用rusage资源请求串中预留内置资源。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 \ -R 'rusage[tmp=50&&mem=50]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    checkRusageValue    50    ${resv21}    0    0
    [Teardown]    killJob

case38.提交作业时，使用rusage资源请求串中预留动态共享资源res1,span[ptile=1].
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res1    3
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m 'rhela1 rhelb' -R 'rusage[res1=3] span[ptile=1]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${resinfo1}    runCommand    jhosts -s
    log    ${resinfo1}
    @{host1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    catenate    @{host1}
    Should Contain    ${string1}    rhelb
    Should Contain    ${string1}    rhela1
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    checkRusageValue    3    ${resv1}    0    0
    checkRusageValue    3    ${totle1}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case39.不同的作业控制，作业的资源预留和释放jctrl stop。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${resinfo}    checkStatShareResTotal    res1    3
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m rhela1 -R 'rusage[res1=3]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    checkRusageValue    3    ${resv1}    0    0
    checkRusageValue    3    ${totle1}    0    0
    ${stopinfo}    runCommand    su jhadmin -c "jctrl stop ${jobid1}"
    log    ${stopinfo}
    sleep    3
    checkJobStatus    ${jobid1}    USUSP
    sleep    3
    ${resinfo}    runCommand    jhosts -s
    log    ${resinfo}
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    checkRusageValue    3    ${resv1}    0    0
    checkRusageValue    3    ${totle1}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case40.不同的作业控制，作业的资源预留额释放jctrl resume。
    [Tags]    p2
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 \ -R 'rusage[tmp=50&&mem=50||swap=50]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    checkRusageValue    50    ${resv21}    0    0
    ${stopinfo}    runCommand    su jhadmin -c "jctrl stop ${jobid1}"
    log    ${stopinfo}
    checkJobStatus    ${jobid1}    USUSP
    sleep    5
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    checkRusageValue    50    ${resv21}    0    0
    ${resumeinfo}    runCommand    su jhadmin -c "jctrl resume ${jobid1}"
    log    ${resumeinfo}
    checkJobStatus    ${jobid1}    RUN
    sleep    5
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    checkRusageValue    50    ${resv21}    0    0
    [Teardown]    killJob

case41.队列级rusage资源请求，与select和span符合case。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -q resreq16 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${used2}    getAndCheckJobRusageInfo    ${jobid1}    SWAP
    log    ${used2}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    swap
    ${host2}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host2}    mem
    ${resv22}    getHostReserved    ${host2}    swap
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    ${used2}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv22}    ${used2}
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case42.队列级rusage资源请求中rusage的资源值为0。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -q resreq17 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    20
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    tmp
    checkRusageValue    0    ${resv1}    0    0
    checkRusageValue    0    ${resv2}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case43.同时配置作业级和队列级，作业级和队列级的res_req同时生效。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -q resreq15 -R 'rusage[tmp=50]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    tmp
    checkRusageValue    100    ${resv1}    ${used1}
    checkRusageValue    100    ${resv2}    0    0
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case44.bug10861修改队列上的资源预留，配置生效后，run作业的资源预留不改变。
    [Tags]    p1
    [Setup]    readyTest
    ${qinfo}    getString    PRIORITY=20\nRES_REQ=rusage[swap=50&&mem=50]\n
    addOrModifyQueue    reqtest1    ${qinfo}
    jadminSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -q reqtest1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${used2}    getAndCheckJobRusageInfo    ${jobid1}    SWAP
    log    ${used2}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    swap
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    ${used2}
    ${qinfo}    getString    PRIORITY=20\nRES_REQ=rusage[swap=100]\n
    addOrModifyQueue    reqtest1    ${qinfo}
    jadminSched
    checkRestartClusterStatus
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${used2}    getAndCheckJobRusageInfo    ${jobid1}    SWAP
    log    ${used2}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    swap
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv2}    ${used2}
    [Teardown]    delQueue    reqtest1

case45.修改队列上的资源预留串，配置生效后，pend的作业按照新的配置预留。
    [Tags]    p1
    [Setup]    readyTest
    ${qinfo}    getString    PRIORITY=20\nRES_REQ=rusage[swap=50&&mem=50]\n
    addOrModifyQueue    reqtest1    ${qinfo}
    jadminSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su jhadmin -c "jsub -n 2 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    checkJobStatus    ${jobid0}    RUN
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -q reqtest1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    sleep    5
    checkJobStatus    ${jobid1}    PEND
    ${qinfo}    getString    PRIORITY=20\nRES_REQ=rusage[swap=100]\n
    addOrModifyQueue    reqtest1    ${qinfo}
    jadminSched
    checkRestartClusterStatus
    checkJobStatus    ${jobid0}    RUN
    ${kilinfo}    runCommand    su jhadmin -c "jctrl kill ${jobid0}"
    log    ${kilinfo}
    checkJobStatus    ${jobid1}    RUN
    sleep    5
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${used2}    getAndCheckJobRusageInfo    ${jobid1}    SWAP
    log    ${used2}
    ${host1}    QueryHostInfo    ${exechost1}
    ${resv1}    getHostReserved    ${host1}    mem
    ${resv2}    getHostReserved    ${host1}    swap
    checkRusageValue    0    ${resv1}    0    0
    checkRusageValue    100    ${resv2}    ${used2}
    [Teardown]    delQueue    reqtest1

case46.抢占不可释放的rusage资源预留。
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res5    8
    checkHostResTotal    rhelb    res5    3
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'rusage[res5=1]' \ -q prelow1 -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res5
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res5
    log    ${resv2}
    checkRusageValue    1    ${resv1}    0    0
    checkRusageValue    1    ${resv2}    0    0
    ${job2}    querySubmitInfo    su user1 -c "jsub \ -q prehigh1 \ sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    SSUSP
    checkJobStatus    ${jobid2}    RUN
    sleep    3
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res5
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res5
    log    ${resv2}
    checkRusageValue    1    ${resv1}    0    0
    checkRusageValue    1    ${resv2}    0    0
    [Teardown]    killJob

case47.抢占可释放的rusage资源预留.
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res5    8
    checkHostResTotal    rhelb    res5    3
    checkHostResTotal    rhela1    res7    3
    checkHostResTotal    rhelb    res7    3
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'rusage[res7=1&&res5=1]' \ -q prelow1 -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res7
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res7
    log    ${resv2}
    checkRusageValue    1    ${resv1}    0    0
    checkRusageValue    1    ${resv2}    0    0
    ${job2}    querySubmitInfo    su user1 -c "jsub \ -q prehigh1 \ sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    SSUSP
    checkJobStatus    ${jobid2}    RUN
    sleep    30
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res7
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res7
    log    ${resv2}
    checkRusageValue    0    ${resv1}    0    0
    checkRusageValue    0    ${resv2}    0    0
    [Teardown]    killJob

case48.同时抢占可释放的和不可释放的资源预留。
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res5    8
    checkHostResTotal    rhelb    res5    3
    checkHostResTotal    rhela1    res7    3
    checkHostResTotal    rhelb    res7    3
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su user1 -c "jsub -R 'rusage[res7=1&&res5=1]' \ -q prelow1 -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    3
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res5
    ${resv11}    getHostReserved    ${host1}    res7
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res5
    ${resv22}    getHostReserved    ${host2}    res7
    log    ${resv2}
    Should Be Equal As Integers    ${resv1}    1
    Should Be Equal As Integers    ${resv11}    1
    Should Be Equal As Integers    ${resv2}    1
    Should Be Equal As Integers    ${resv22}    1
    ${job2}    querySubmitInfo    su user1 -c "jsub \ -q prehigh1 \ sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    SSUSP
    checkJobStatus    ${jobid2}    RUN
    sleep    3
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    res5
    ${resv11}    getHostReserved    ${host1}    res7
    log    ${resv1}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    res5
    ${resv22}    getHostReserved    ${host2}    res7
    log    ${resv2}
    Should Be Equal As Integers    ${resv1}    1
    Should Be Equal As Integers    ${resv11}    0
    Should Be Equal As Integers    ${resv2}    1
    Should Be Equal As Integers    ${resv22}    0
    [Teardown]    killJob

case49.高优先级和低优先级都指定rusage，抢占slots时，没有正常抢占。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    1 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 -m rhela1 -q prelow1 \ -R 'rusage[tmp=50&&mem=50]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${usedno}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${usedno}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    checkRusageValue    100    ${resv1}    ${used1}
    Should Be Equal As Integers    ${resv2}    100
    ${job2}    querySubmitInfo    su user1 -c "jsub -n 3 \ -R 'rusage[tmp=30&&mem=30]' -q prehigh1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    SSUSP
    checkJobStatus    ${jobid2}    RUN
    sleep    20
    ${used2}    getAndCheckJobRusageInfo    ${jobid2}    MEM
    log    ${used2}
    ${host2}    QueryHostInfo    rhelb
    ${resv2}    getHostReserved    ${host2}    mem
    log    ${resv2}
    ${resv3}    getHostReserved    ${host2}    tmp
    log    ${resv3}
    checkRusageValue    30    ${resv2}    ${used2}
    Should Be Equal As Integers    ${resv3}    30
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case50.bug11162重启sched，作业的内置资源预留信息正常恢复。
    [Tags]    p1    bug
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 \ -R 'rusage[tmp=50&&mem=50]' \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${usedx}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${usedx}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0    0
    checkRusageValue    50    ${resv21}    0    0
    jserviceRestartAll
    checkRestartClusterStatus
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${used1}    getAndCheckJobRusageInfo    ${jobid1}    MEM
    log    ${used1}
    ${host1}    QueryHostInfo    rhela1
    ${resv1}    getHostReserved    ${host1}    mem
    log    ${resv1}
    ${resv2}    getHostReserved    ${host1}    tmp
    log    ${resv2}
    ${host11}    QueryHostInfo    rhelb
    ${resv11}    getHostReserved    ${host11}    mem
    log    ${resv11}
    ${resv21}    getHostReserved    ${host11}    tmp
    log    ${resv21}
    checkRusageValue    50    ${resv1}    ${used1}
    checkRusageValue    50    ${resv11}    ${used1}
    checkRusageValue    50    ${resv2}    0
    checkRusageValue    50    ${resv21}    0
    [Teardown]    killJob

case51.bug11875重启sched后，作业的自定义资源预留正常恢复。
    [Tags]    p1    bug
    [Setup]    readyTest
    ${resinfo}    checkStatShareResTotal    res1    3
    log    ${resinfo}
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2 \ -R 'rusage[res1=3]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    sleep    30
    ${resinfo1}    runCommand    jhosts -s
    log    ${resinfo1}
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    Should Be Equal As Integers    ${resv1}    3
    Should Be Equal As Integers    ${totle1}    3
    jserviceRestartAll
    checkRestartClusterStatus
    checkJobStatus    ${jobid1}    RUN
    sleep    10
    ${resinfo1}    runCommand    jhosts -s
    log    ${resinfo1}
    ${resv1}    getStatShareResResv    res1
    ${totle1}    getStatShareResTotal    res1
    Should Be Equal As Integers    ${resv1}    3
    Should Be Equal As Integers    ${totle1}    3
    [Teardown]    killJob

case52.当作业请求-n min,max,当max满足是，且满足ptile，在作业状态为RUN时。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    5 ()
    addOrModifyHost    rhelb    7 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2,8 -R 'span[ptile=4]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    sleep    3
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    8 Processors
    Should Contain    ${proc}    4*rhelb
    Should Contain    ${proc}    4*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case53.当作业请求-n min,max,当max满足是，且满足ptile，在作业状态为RUN时。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    7 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 2,8 -R 'span[ptile=4]' sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    sleep    3
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    7 Processors
    Should Contain    ${proc}    4*rhelb
    Should Contain    ${proc}    3*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case54.队列上配置RES_REQ=span[ptile=5],提交作业指定-n大于ptile。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 3 -q resreq18 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${exechost1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${exechost1}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case55.队列上配置RES_REQ=span[ptile=5],集群中节点不满足队列配置的ptile。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su jhadmin -c "jsub -n 5 -q resreq18 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    checkJobStatus    ${jobid1}    PEND
    ${joba}    queryJobInfo    ${jobid1}
    ${pendreason}    getJobPndRsn    ${joba}
    log    ${pendreason}
    Should Contain    ${pendreason}    Not enough processors to meet the queue's spanning requirement: 2 hosts;
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case56.队列配置RES_REQ=span[ptile=3],提交作业时指定span[ptile=4]，作业级覆盖队列级。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    6 ()
    addOrModifyHost    rhelb    5 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${queinfo}    runCommand    jqueues -l resreq19
    log    ${queinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 5 -q resreq19 -R "span[ptile=4]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${alljob}    runCommand    jjobs -u all -l
    log    ${alljob}
    @{exechost1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}=    Catenate    @{exechost1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    sleep    3
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    5 Processors
    Should Contain    ${proc}    4*rhelb
    Should Contain    ${proc}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case57.队列上配置RES_REQ=span[ptile=4],和hosts=host2 host1，配置多个节点。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 4 -q resreq20 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    checkJobStatus    ${jobid1}    PEND
    ${joba}    queryJobInfo    ${jobid1}
    ${pendreason}    getJobPndRsn    ${joba}
    log    ${pendreason}
    Should Contain    ${pendreason}    Not enough processors to meet the queue's spanning requirement: 2 hosts;
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case58.队列上配置RES_REQ=span[ptile=4],和HOSTS=hostgroup，配置节点组。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHostGroup    group1    (rhela1)
    addOrModifyHostGroup    group2    (group1 rhelb )
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 3,4 -q resreq21 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    4 Processors
    Should Contain    ${proc}    2*rhelb
    Should Contain    ${proc}    2*rhela1
    [Teardown]    delHostGroupAndHost    group2,group1    rhela1= 1 \ ()    rhelb= 1 \ ()

case59.队列配置RES_REQ=span[ptile=4],jsub提交作业-m指定多个节点。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2,8 -q resreq22 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    3 Processors
    Should Contain    ${proc}    3*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case60.队列上配置RES_REQ=span[hosts=1].
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    5 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 5 -q resreq23 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    5 Processors
    Should Contain    ${proc}    5*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case61.队列配置HOSTS=hostgroup+优先级，节点的优先级。
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHostGroup    group1    (rhela1)
    addOrModifyHostGroup    group2    (rhelb )
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 4 -q resreq24 -R "span[hosts=1]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    3
    ${inf}    run    jjobs -u all
    log    ${inf}
    ${proc}    getAndCheckJobUsedProc    ${jobid1}
    log    ${proc}
    Should Contain    ${proc}    4 Processors
    Should Contain    ${proc}    4*rhela1
    [Teardown]    delHostGroupAndHost    group2,group1    rhela1= 1 \ ()    rhelb= 1 \ ()

case62.通过jsub -R使用order指定内置资源（ut）。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${ut1}    checkUt    rhela1
    ${ut2}    checkUt    rhelb
    ${value}    compareUt    ${ut1}    ${ut2}
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -R "order[ut]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Run Keyword If    '${value}'=='True'    Should Be Equal    ${host1}    rhelb
    ...    ELSE    Should Be Equal    ${host1}    rhela1
    ${ut3}    checkUt    rhela1
    ${ut4}    checkUt    rhelb
    ${value1}    compareUt    ${ut3}    ${ut4}
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -R "order[-ut]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Run Keyword If    '${value1}'=='True'    Should Be Equal    ${host2}    rhela1
    ...    ELSE    Should Be Equal    ${host2}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case63.同时在队列中配置order，提交作业指定order(相同资源)。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq25 -R "order[ut]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq25 -R "order[-ut]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case64.同时在队列中配置order，提交作业指定order(不同资源)。
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq26 -R "order[res5]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhela1
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq26 -R "order[-res5]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case65.通过jsub -R使用order指定外置资源，字符串，布尔型。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 (cs)
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${subinfo}    runCommand    su jhadmin -c 'jsub -n 2 -R "order[cs]" sleep 1000'
    log    ${subinfo}
    Should Contain    ${subinfo}    order[cs]: Bad resource requirement syntax. Job not submitted
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -R "order[res5]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case66.在队列中通过order指定内置资源(ut)。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq27 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host1}    rhelb
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq28 sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case67.队列上配置order[-mem]。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${host0}    ${host00}    compareMem    rhela1    rhelb
    log    ${host0}
    log    ${host00}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq29 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host3}    ${host00}
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case68.通过jsub -R使用order指定内置资源（type字符串）。
    [Setup]    readyTest
    ${qinfo}    getString    PRIORITY=20\nRES_REQ=order[type]\n
    addOrModifyQueue    reqtest2    ${qinfo}
    jadminSched
    checkClusterStatus
    sleep    3
    ${queinfo}    runCommand    jqueues -l restest2
    log    ${queinfo}
    Should Not Contain    ${queinfo}    ResReq
    Should Not Contain    ${queinfo}    order[type]
    [Teardown]    delQueue    reqtest2

case69.同时指定host+优先级，order后，作业级覆盖队列级。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${host0}    ${host00}    compareMem    rhela1    rhelb
    log    ${host0}
    log    ${host00}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq30 -m "${host00}+100 ${host0}" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host3}    ${host00}
    sleep    3
    ${killinfo}    runCommand    su jhadmin -c "jctrl kill ${jobid1}"
    log    ${killinfo}
    sleep    5
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${host0}    ${host00}    compareMem    rhela1    rhelb
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq30 \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host4}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host4}    ${host0}
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case70.同时指定host+优先级，order后，作业级覆盖队列级。
    [Tags]    p1    docker-not-run
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq31 -m "rhelb+10 rhela1+20" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host3}    rhela1
    sleep    3
    ${killinfo}    runCommand    su jhadmin -c "jctrl kill ${jobid1}"
    log    ${killinfo}
    sleep    3
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq31 \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host4}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host4}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case71.队列指定的order，与作业-R指定的资源不同。
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${inputdir}    Set Variable    ${filedir}/spooler/input/res3
    ${sbindir}    getSbinPath
    Copy File    ${inputdir}    ${sbindir}/res3
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    checkHostResTotal    rhela1    res5    8
    checkHostResTotal    rhelb    res5    3
    checkHostResTotal    rhela1    res8    3
    checkHostResTotal    rhelb    res8    8
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq32 -R "order[res8]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid1}
    Should Be Equal    ${host3}    rhelb
    Remove File    ${sbindir}/res3
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case72.同时指定span[ptile]与order。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 4 -q resreq30 -R "span[ptile=2]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobUsedProc    ${jobid1}
    Should Contain    ${host3}    2*rhelb
    Should Contain    ${host3}    2*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case73.同时指定span[hosts]与order。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 4 -q resreq32 -R "span[hosts=1]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobUsedProc    ${jobid1}
    Should Contain    ${host3}    4*rhelb
    sleep    2
    killJob
    sleep    2
    addOrModifyHost    rhela1    5 ()
    addOrModifyHost    rhelb    4 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 4 -q resreq32 -R "span[hosts=1]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${host3}    getAndCheckJobUsedProc    ${jobid1}
    Should Contain    ${host3}    4*rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case74.提交作业指定order后，当集群中没有slots时，jctrl start强制作业执行。
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    usedUt    rhela1    ${file}    80%
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 \ sleep 1000'
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -R "order[res5]" \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su jhadmin -c 'jsub -R "order[res5]" \ sleep 1000'
    ${jobid3}    getJobId    ${job3}
    sleep    3
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${startinfo}    runCommand    su jhadmin -c 'jctrl start -m "rhelb rhela1" ${jobid2} '
    log    ${startinfo}
    ${host3}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host3}    rhelb
    ${startinfo1}    runCommand    su jhadmin -c 'jctrl start -m "rhelb rhela1" ${jobid3} '
    log    ${startinfo1}
    ${host4}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host4}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case75.提交作业指定order，执行操作jctrl stop、resume、kill。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -R "order[res5]" \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host3}    rhela1
    sleep    2
    ${startinfo1}    runCommand    su jhadmin -c 'jctrl stop ${jobid2} '
    log    ${startinfo1}
    checkJobStatus    ${jobid2}    USUSP
    ${host4}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host4}    rhela1
    sleep    2
    ${startinfo1}    runCommand    su jhadmin -c 'jctrl resume ${jobid2} '
    log    ${startinfo1}
    checkJobStatus    ${jobid2}    RUN
    ${host4}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host4}    rhela1
    sleep    2
    ${startinfo1}    runCommand    su jhadmin -c 'jctrl kill ${jobid2} '
    log    ${startinfo1}
    Should Contain    ${startinfo1}    Job <${jobid2}> is being terminated
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case76.提交作业指定order为slots。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 3 -R "order[slots]" \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host3}    rhela1
    sleep    2
    ${startinfo1}    runCommand    su jhadmin -c 'jctrl kill ${jobid2} '
    log    ${startinfo1}
    checkJobStatus    ${jobid2}    EXIT
    sleep    2
    ${job3}    querySubmitInfo    su jhadmin -c 'jsub -n 3 -R "order[-slots]" \ sleep 1000'
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid3}    RUN
    ${host4}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host4}    rhelb
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case77.同时指定rusage与order，当order的节点资源不满足。
    [Tags]    p2    docker-not-run
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${host0}    ${host00}    compareMem    rhela1    rhelb
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq33 -R "rusage[mem=100000000]" \ sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    5
    checkJobStatus    ${jobid1}    PEND
    ${host1}    queryJobInfo    ${jobid1}
    ${pendreason1}    getJobPndRsn    ${host1}
    log    ${pendreason1}
    Should Contain    ${pendreason1}    Job's requirements for resource reservation not satisfied: 2 hosts
    ${job2}    querySubmitInfo    su jhadmin -c 'jsub -n 2 -q resreq33 -R "rusage[mem=50]" \ sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    RUN
    ${host3}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host3}    ${host0}
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case78.队列上配置RES_REQ=span[ptile=5],集群中节点不满足队列配置的ptile。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    4 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${hostinfo}    runCommand    jhosts -l
    log    ${hostinfo}
    ${job1}    querySubmitInfo    su jhadmin -c 'jsub -n 5 -q resreq34 sleep 1000'
    ${jobid1}    getJobId    ${job1}
    sleep    5
    checkJobStatus    ${jobid1}    PEND
    ${host1}    queryJobInfo    ${jobid1}
    ${pendreason1}    getJobPndRsn    ${host1}
    log    ${pendreason1}
    Should Contain    ${pendreason1}    Not enough processors to meet the queue's spanning requirement:
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()
