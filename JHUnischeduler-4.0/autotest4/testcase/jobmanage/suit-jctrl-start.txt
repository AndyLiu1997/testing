*** Settings ***
Suite Setup       preSuite    spooler/conf/conf-jctrl-start
Suite Teardown    postSuite
Library           /apps/autotest4/lib/clusterKeyword.py
Library           /apps/autotest4/lib/clusterLib.py
Library           /apps/autotest4/lib/common.py
Library           /apps/autotest4/lib/hostKeyword.py
Library           /apps/autotest4/lib/hostLib.py
Library           /apps/autotest4/lib/hostsConfLib.py
Library           /apps/autotest4/lib/jobKeyword.py
Library           /apps/autotest4/lib/jobLib.py
Library           /apps/autotest4/lib/myUtils.py
Library           /apps/autotest4/lib/OperatingSystem.py
Library           /apps/autotest4/lib/queueKeyword.py
Library           /apps/autotest4/lib/queueLib.py
Library           /apps/autotest4/lib/paramsConfLib.py
Library           /apps/autotest4/lib/queuesConfLib.py
Library           /apps/autotest4/lib/retry.py
Library           /apps/autotest4/lib/schedulerConfLib.py
Library           /apps/autotest4/lib/userGroupKeyword.py
Library           /apps/autotest4/lib/userGroupLib.py
Library           /apps/autotest4/lib/userKeyword.py
Library           /apps/autotest4/lib/usersConfLib.py
Library           /apps/autotest4/lib/userLib.py

*** Test Cases ***
case1.jctrl start -f 的作业可以被抢占
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub -n 2 -q prelow1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    sleep    2
    ${startinfo}    runCommand    su jhadmin -c "jctrl start -f -m \ 'rhela1 rhelb' ${jobid3}"
    log    ${startinfo}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    ${job4}    querySubmitInfo    su user1 -c "jsub -q premid1 sleep 1000"
    ${jobid4}    getJobId    ${job4}
    ${job5}    querySubmitInfo    su user1 -c "jsub -q prehigh1 sleep 1000"
    ${jobid5}    getJobId    ${job5}
    sleep    2
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    PEND
    checkJobStatus    ${jobid5}    PEND
    ${joba}    queryJobInfo    ${jobid4}
    ${pendinfo}    getJobPndRsn    ${joba}
    log    ${pendinfo}
    Should Contain    ${pendinfo}    Job slot limit reached:
    [Teardown]    killJob

case2.jctrl start -f 的作业可以被挂起、恢复、终止。
    [Tags]    p1    long-time
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file}    Set Variable    ${filedir}/spooler/input/jctrl.sh
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    sleep    2
    ${job3}    querySubmitInfo    su user1 -c "jsub ${file}"
    ${jobid3}    getJobId    ${job3}
    ${job4}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    checkJobStatus    ${jobid4}    PEND
    runCommand    su jhadmin -c "jctrl start -f -m rhela1 ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    PEND
    sleep    2
    runCommand    su jhadmin -c "jctrl stop ${jobid3}"
    checkJobStatus    ${jobid3}    RUN
    sleep    2
    ${job11}    queryjobinfo    ${jobid3}
    ${reason1}    getjobspndrsn    ${job11}
    log    ${reason1}
    should contain    ${reason1}    The job was suspended by user;
    ${outputdir1}    Set Variable    ${filedir}/spooler/output/jobout${jobid3}.txt
    ${result1}    Get File    ${outputdir1}
    log    ${result1}
    ${size1}    Get File Size    ${outputdir1}
    log    ${size1}
    sleep    3
    ${result2}    Get File    ${outputdir1}
    log    ${result2}
    ${size2}    Get File Size    ${outputdir1}
    log    ${size2}
    Should Be Equal As Integers    ${size1}    ${size2}
    runCommand    su jhadmin -c "jctrl resume ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    PEND
    ${outputdir3}    Set Variable    ${filedir}/spooler/output/jobout${jobid3}.txt
    ${result5}    Get File    ${outputdir3}
    log    ${result5}
    ${size5}    Get File Size    ${outputdir3}
    log    ${size5}
    sleep    3
    ${result6}    Get File    ${outputdir3}
    log    ${result6}
    ${size6}    Get File Size    ${outputdir3}
    log    ${size6}
    Should Not Be Equal As Integers    ${size5}    ${size6}
    runCommand    su jhadmin -c "jctrl kill ${jobid3}"
    checkJobStatus    ${jobid3}    EXIT
    runCommand    su jhadmin -c "jctrl kill -u all 0"
    Remove Files    ${filedir}/spooler/output/*.txt
    [Teardown]    killJob

case3.jctrl start -m 的作业可以被抢占
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub -n 2 -q prelow1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    sleep    2
    runCommand    su jhadmin -c "jctrl start -m 'rhela1 rhelb' ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    ${job4}    querySubmitInfo    su user1 -c "jsub -q premid1 sleep 1000"
    ${jobid4}    getJobId    ${job4}
    ${job5}    querySubmitInfo    su user1 -c "jsub -q prehigh1 sleep 1000"
    ${jobid5}    getJobId    ${job5}
    sleep    2
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    PEND
    checkJobStatus    ${jobid5}    PEND
    ${joba}    queryJobInfo    ${jobid4}
    ${pendinfo}    getJobPndRsn    ${joba}
    log    ${pendinfo}
    Should Contain    ${pendinfo}    Job slot limit reached:
    [Teardown]    killJob

case4.当节点上有jctrl start的作业，然后删除作业，只有run的slots数小于节点最大slots数，节点才会从closed_full状态变为ok状态。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    sleep    2
    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    runCommand    su jhadmin -c "jctrl kill ${jobid1}"
    sleep    2
    checkJobStatus    ${jobid1}    EXIT
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkHostStatus    rhela1    closed_Full
    runCommand    su jhadmin -c "jctrl kill ${jobid2}"
    checkHostStatus    rhela1    ok
    ${job4}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid1}    EXIT
    checkJobStatus    ${jobid2}    EXIT
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    RUN
    [Teardown]    modHostInfo    rhela1=1 ()

case5.当节点上有jctrl start到排除的节点，作业可以run起来。
    [Tags]    p1
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub -m ~rhela1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    sleep    2
    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    [Teardown]    killJob

case6.jctrl start -m数组作业。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c "jsub -n 4 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub -J arr[1-2] sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -J arr[1-2] sleep 1000"
    ${jobid3}    getJobId    ${job3}
    sleep    2
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}[1]    PEND
    checkJobStatus    ${jobid2}[2]    PEND
    checkJobStatus    ${jobid3}[1]    PEND
    checkJobStatus    ${jobid3}[2]    PEND
    ${info}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid2}"
    log    ${info}
    Should Be Equal    ${info}    Failed to run the job: Cannot operate on job array
    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid2}[2]"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}[1]    PEND
    checkJobStatus    ${jobid2}[2]    RUN
    checkJobStatus    ${jobid3}[1]    PEND
    checkJobStatus    ${jobid3}[2]    PEND
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb=1 ()

case7.普通用户不能jctrlstart自己的作业，队列管理员、用户组管理员也不可以执行jctrl start。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyUserGroupA    group1    (user1 user2) (user2) ([default,1])
    jadminJhdsSched
    checkClusterStatus
    ${job1}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -q qadmin sleep 1000"
    ${jobid3}    getJobId    ${job3}
    ${job4}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    checkJobStatus    ${jobid4}    PEND
    ${info1}    runCommand    su user1 -c "jctrl start -m rhela1 ${jobid2}"
    log    ${info1}
    Should Be Equal    ${info1}    Failed to run the job: User permission denied
    ${info2}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid2}"
    log    ${info2}
    Should Be Equal    ${info2}    Job <${jobid2}> is being forced to run
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    checkJobStatus    ${jobid4}    PEND
    ${info3}    runCommand    su user3 -c "jctrl start -m rhela1 ${jobid3}"
    log    ${info3}
    Should Be Equal    ${info3}    Failed to run the job: User permission denied
    ${info4}    runCommand    su user2 -c "jctrl start -m rhela1 ${jobid4}"
    log    ${info4}
    Should Be Equal    ${info4}    Failed to run the job: User permission denied
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    checkJobStatus    ${jobid4}    PEND
    [Teardown]    delUserGroup    group1

case8.当jctrl start各种状态的作业，作业只能jctrl start pend和PSUSP状态的作业。
    [Tags]    p1
    [Setup]    readyTest
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1"
    ${jobid0}    getJobId    ${job0}
    ${job00}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid00}    getJobId    ${job00}
    checkJobStatus    ${jobid00}    RUN
    runCommand    su jhadmin -c "jctrl kill ${jobid00}"
    checkJobStatus    ${jobid0}    DONE
    checkJobStatus    ${jobid00}    EXIT
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub -q prelow1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub -q prehigh1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    SSUSP
    checkJobStatus    ${jobid3}    RUN
    runCommand    su jhadmin -c "jctrl stop ${jobid1}"
    checkJobStatus    ${jobid1}    USUSP
    checkJobStatus    ${jobid2}    SSUSP
    checkJobStatus    ${jobid3}    RUN
    ${job4}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid4}    getJobId    ${job4}
    ${job5}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid5}    getJobId    ${job5}
    runCommand    su jhadmin -c "jctrl stop ${jobid4}"
    checkJobStatus    ${jobid1}    USUSP
    checkJobStatus    ${jobid2}    SSUSP
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    PSUSP
    checkJobStatus    ${jobid5}    PEND
    ${info0}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid0}"
    log    ${info0}
    Should Be Equal    ${info0}    Job <${jobid0}> is being forced to run
    ${info00}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid00}"
    log    ${info00}
    Should Be Equal    ${info00}    Job <${jobid00}> is being forced to run
    ${info1}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid1}"
    log    ${info1}
    Should Be Equal    ${info1}    Failed to run the job: Job has already started
    ${info2}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid2}"
    log    ${info2}
    Should Be Equal    ${info2}    Failed to run the job: Job has already started
    ${info3}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid3}"
    log    ${info3}
    Should Be Equal    ${info3}    Failed to run the job: Job has already started
    ${info4}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid4}"
    log    ${info4}
    Should Be Equal    ${info4}    Job <${jobid4}> is being forced to run
    ${info5}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid5}"
    log    ${info5}
    Should Be Equal    ${info5}    Job <${jobid5}> is being forced to run
    checkJobStatus    ${jobid0}    DONE
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid1}    USUSP
    checkJobStatus    ${jobid2}    SSUSP
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    RUN
    checkJobStatus    ${jobid5}    RUN
    [Teardown]    killJob

case9.bug11793当节点上有jctrl start到排除的节点，作业可以run起来。
    [Tags]    p1    bug
    [Setup]    readyTest
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${job3}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid3}    getJobId    ${job3}
    sleep    2
    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid3}"
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    jserviceRestartAll
    checkHostStatus    rhela1    closed_Full
    checkHostStatus    rhelb    closed_Full
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    [Teardown]    killJob

case10.jctrl start -h
    [Tags]    p1
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file}    Set Variable    ${filedir}/spooler/input/start-help.txt
    log    ${file}
    ${starthelp}    runCommand    jctrl start -h
    log    ${starthelp}
    ${startfile}    Get File    ${file}
    log    ${startfile}
    Should Be Equal    ${starthelp}    ${startfile}
    [Teardown]

case11.jctrl sart -V
    [Tags]    p1
    [Setup]    readyTest
    ${version}    checkVersion    jctrl -V
    [Teardown]

case12.bug12078jctrl start -f当suspending conditions到达后，作业会继续run。
    [Tags]    p1    bug    docker-not-run
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file0}    Set Variable    ${filedir}/spooler/input/pi.sh
    ${file}    normalPath    ${file0}
    addOrModifyHost    rhela1    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job00}    querySubmitInfo    su user1 -c "jsub -m rhelb \ sleep 1000"
    ${jobid00}    getJobId    ${job00}
    ${job0}    querySubmitInfo    su user1 -c "jsub -m rhela1 \ sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub -m rhela1 -q stop_sched1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -q stop_sched1 ${file}"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -q stop_sched1 ${file}"
    ${jobid3}    getJobId    ${job3}
    ${job4}    querySubmitInfo    su user1 -c "jsub -q stop_sched1 ${file}"
    ${jobid4}    getJobId    ${job4}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    checkJobStatus    ${jobid4}    PEND
    ${start1}    runCommand    su jhadmin -c "jctrl start -f -m rhela1 ${jobid2}"
    log    ${start1}
    ${start2}    runCommand    su jhadmin -c "jctrl start -f -m rhela1 ${jobid3}"
    log    ${start2}
    ${start3}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid4}"
    log    ${start3}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    RUN
    usedUt    rhela1    ${file}    70%
    checkJobStatus    ${jobid1}    SSUSP
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    checkJobStatus    ${jobid4}    RUN
    [Teardown]    modHostInfo    rhela1=1 ()

case13. (77)jctrl start -f的作业可以独占节点。
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -n 3 -x -q clulow1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -f -m "rhela1 rhelb" ${jobid2}'
    log    ${start1}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkHostStatus    rhela1    closed_Excl
    checkHostStatus    rhelb    closed_Excl
    ${job3}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid3}    getJobId    ${job3}
    ${killinfo}    runCommand    su user1 -c "jctrl kill ${jobid0} ${jobid1}"
    log    ${killinfo}
    checkJobStatus    ${jobid0}    EXIT
    checkJobStatus    ${jobid1}    EXIT
    sleep    5
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    checkHostStatus    rhela1    closed_Excl
    checkHostStatus    rhelb    closed_Excl
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb= 1 ()

case14. (78)jctrl start -m可以指定一个或多个节点。
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub -m rhelb sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -m rhelb -n 2 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -m rhela1 -n 2 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m rhelb ${jobid2}'
    log    ${start1}
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    ${host1}    getAndCheckJobExecHost    ${jobid2}
    should Be Equal    ${host1}    rhelb
    ${killinfo}    runCommand    su jhadmin -c 'jctrl start -m "rhela1 rhelb" ${jobid3}'
    log    ${killinfo}
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    RUN
    ${host2}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host2}    rhela1
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb= 1 ()

case15.(80)jctrl start -m的作业可以独占节点
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -n 3 -x -q clulow1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start \ -m "rhela1 rhelb" ${jobid2}'
    log    ${start1}
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    checkHostStatus    rhela1    closed_Excl
    checkHostStatus    rhelb    closed_Excl
    ${job3}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid3}    getJobId    ${job3}
    ${killinfo}    runCommand    su user1 -c "jctrl kill ${jobid0} ${jobid1}"
    log    ${killinfo}
    checkJobStatus    ${jobid0}    EXIT
    checkJobStatus    ${jobid1}    EXIT
    sleep    5
    checkJobStatus    ${jobid2}    RUN
    checkJobStatus    ${jobid3}    PEND
    checkHostStatus    rhela1    closed_Excl
    checkHostStatus    rhelb    closed_Excl
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb= 1 ()

case16. (81)jctrl start -m到不存在的节点会报错。
    [Tags]    p2
    [Setup]    readyTest
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start \ -m hostnoxx ${jobid2}'
    log    ${start1}
    Should Contain    ${start1}    hostnoxx: Failed to run the job Bad host name, host group name or cluster name
    [Teardown]    killJob

case17. (85)当节点的最大slots不满足作业请求时，执行jctrl start到该节点，会报错。
    [Tags]    p2
    [Setup]    readyTest
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start \ -m rhela1 ${jobid2}'
    log    ${start1}
    Should Contain    ${start1}    Failed to run the job: Too many processors requested
    [Teardown]    killJob

case18. (86)当作业已经指定节点，然后执行jctrl start到其它节点上，作业可以run起来。
    [Tags]    p2
    [Setup]    readyTest
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -m rhela1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start \ -m rhelb ${jobid2}'
    log    ${start1}
    checkJobStatus    ${jobid2}    RUN
    ${host0}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host0}    rhelb
    [Teardown]    killJob

case19. (87)将作业jctrl start到作业排除的节点，作业可以run起来。
    [Tags]    p2
    [Setup]    readyTest
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -m ~rhela1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start \ -m rhela1 ${jobid2}'
    log    ${start1}
    checkJobStatus    ${jobid2}    RUN
    ${host0}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host0}    rhela1
    [Teardown]    killJob

case20.12079 (88)将作业jctrl start到指定的节点组或节点组中的节点上，会执行成功。
    [Tags]    p2    bug
    [Setup]    readyTest
    addOrModifyHostGroup    group1    (rhela1 rhelb)
    jadminJhdsSched
    checkClusterStatus
    ${groupinfo1}    runCommand    jhostgroup -r
    log    ${groupinfo1}
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -m group1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -m group1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m group0 ${jobid3}'
    log    ${start1}
    checkJobStatus    ${jobid2}    RUN
    ${host0}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host0}    rhela1
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m rhelb ${jobid3}'
    log    ${start2}
    checkJobStatus    ${jobid3}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host1}    rhelb
    [Teardown]    delHostGroup    group1

case21.12079(89)将作业jctrl start到作业排除的节点组或节点组中的节点上，会报错。
    [Tags]    p2    bug
    [Setup]    readyTest
    addOrModifyHostGroup    group0    (rhela1)
    addOrModifyHostGroup    group1    (rhelb)
    jadminJhdsSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    ${job2}    querySubmitInfo    su user1 -c "jsub -m ~group1 sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -m ~rhela1 sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m group1 ${jobid3}'
    log    ${start1}
    checkJobStatus    ${jobid2}    RUN
    ${host0}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host0}    rhelb
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m rhela1 ${jobid3}'
    log    ${start2}
    checkJobStatus    ${jobid3}    RUN
    ${host1}    getAndCheckJobExecHost    ${jobid3}
    Should Be Equal    ${host1}    rhela1
    [Teardown]    delHostGroup    group1    group2

case22.(91)jctrl start同时强制运行多个作业。
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    2 ()
    addOrModifyHost    rhelb    2 ()
    jadminJhdsSched
    checkClusterStatus
    ${job0}    querySubmitInfo    su user1 -c "jsub -n 4 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    checkJobStatus    ${jobid0}    RUN
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub -J arr[1-2] sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m rhela1 ${jobid1} \ ${jobid3}[1] ${jobid2}'
    log    ${start1}
    should Contain    ${start1}    usage: jctrl
    should Contain    ${start1}    jctrl: error
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb= 1 ()

case23.(92)普通用户不能jctrl start自己的作业。队列管理员、用户组管理员是否可以执行jctrl start命令。
    [Tags]    p1
    [Setup]    readyTest
    addOrModifyUserGroupA    group1    (user1 user2) (user2) ([default,1])
    jadminJhdsSched
    checkClusterStatus
    ${job00}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid00}    getJobId    ${job00}
    checkJobStatus    ${jobid00}    RUN
    ${job0}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c "jsub -q qadmin sleep 1000"
    ${jobid2}    getJobId    ${job2}
    ${job3}    querySubmitInfo    su user1 -c "jsub sleep 1000"
    ${jobid3}    getJobId    ${job3}
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    PEND
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su user1 -c 'jctrl start -m rhela1 ${jobid0}'
    log    ${start1}
    Should Be Equal    ${start1}    Failed to run the job: User permission denied
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    PEND
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m rhela1 ${jobid1}'
    log    ${start2}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${start3}    runCommand    su user2 -c 'jctrl start -m rhela1 ${jobid0}'
    log    ${start3}
    Should Be Equal    ${start3}    Failed to run the job: User permission denied
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${start4}    runCommand    su user3 -c 'jctrl start -m rhela1 ${jobid2}'
    log    ${start4}
    Should Be Equal    ${start4}    Failed to run the job: User permission denied
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    PEND
    ${start5}    runCommand    su root -c 'jctrl start -m rhela1 ${jobid3}'
    log    ${start5}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    checkJobStatus    ${jobid3}    RUN
    [Teardown]    delUserGroup    group1

case24.(95)jctrl start -m的作业的挂起、恢复、终止。
    [Setup]    readyTest
    ${filedir}    getFileDir
    ${file}    Set Variable    ${filedir}/spooler/input/jctrl.sh
    ${job0}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    checkJobStatus    ${jobid0}    RUN
    ${job1}    querySubmitInfo    su user1 -c "jsub ${file}"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid1}    PEND
    sleep    3
    ${start1}    runCommand    su jhadmin -c "jctrl start -m rhela1 ${jobid1}"
    log    ${start1}
    checkJobStatus    ${jobid1}    RUN
    sleep    2
    ${start1}    runCommand    su jhadmin -c "jctrl stop ${jobid1}"
    log    ${start1}
    checkJobStatus    ${jobid1}    USUSP
    sleep    1
    ${job11}    queryjobinfo    ${jobid1}
    ${reason1}    getjobspndrsn    ${job11}
    log    ${reason1}
    should contain    ${reason1}    The job was suspended by user;
    ${outputdir1}    Set Variable    ${filedir}/spooler/output/jobout${jobid1}.txt
    ${result1}    Get File    ${outputdir1}
    log    ${result1}
    ${size1}    Get File Size    ${outputdir1}
    log    ${size1}
    sleep    3
    ${result2}    Get File    ${outputdir1}
    log    ${result2}
    ${size2}    Get File Size    ${outputdir1}
    log    ${size2}
    Should Be Equal As Integers    ${size1}    ${size2}
    runCommand    su jhadmin -c "jctrl resume ${jobid1}"
    checkJobStatus    ${jobid1}    RUN
    ${outputdir3}    Set Variable    ${filedir}/spooler/output/jobout${jobid1}.txt
    ${result5}    Get File    ${outputdir3}
    log    ${result5}
    ${size5}    Get File Size    ${outputdir3}
    log    ${size5}
    sleep    3
    ${result6}    Get File    ${outputdir3}
    log    ${result6}
    ${size6}    Get File Size    ${outputdir3}
    log    ${size6}
    Should Not Be Equal As Integers    ${size5}    ${size6}
    Remove Files    ${filedir}/spooler/output/*.txt
    [Teardown]    killJob

case25.(96)有资源请求的时候/rusage/span/不满足，jctrl start。
    [Tags]    p2
    [Setup]    readyTest
    ${job00}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid00}    getJobId    ${job00}
    checkJobStatus    ${jobid00}    RUN
    ${job0}    querySubmitInfo    su user1 -c "jsub -R rusage[mem=102400] sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c 'jsub -n 2 -R "span[hosts=1]" sleep 1000'
    ${jobid1}    getJobId    ${job1}
    ${job2}    querySubmitInfo    su user1 -c 'jsub -R "select[mem>102400]" sleep 1000'
    ${jobid2}    getJobId    ${job2}
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    PEND
    checkJobStatus    ${jobid2}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m rhela1 ${jobid0}'
    log    ${start1}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    PEND
    checkJobStatus    ${jobid2}    PEND
    ${host0}    getAndCheckJobExecHost    ${jobid0}
    Should Be Equal    ${host0}    rhela1
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m "rhelb rhela1" ${jobid1}'
    log    ${start2}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    PEND
    @{host1}    getAndCheckJobExecHost    ${jobid1}
    ${string1}    cateNate    @{host1}
    Should Contain    ${string1}    rhela1
    Should Contain    ${string1}    rhelb
    ${start3}    runCommand    su jhadmin -c 'jctrl start -m rhelb ${jobid2}'
    log    ${start3}
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    checkJobStatus    ${jobid2}    RUN
    ${host2}    getAndCheckJobExecHost    ${jobid2}
    Should Be Equal    ${host2}    rhelb
    [Teardown]    killJob

case26.(97)jctrl start 一个作业两次
    [Tags]    p2
    [Setup]    readyTest
    ${job00}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid00}    getJobId    ${job00}
    checkJobStatus    ${jobid00}    RUN
    ${job0}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    checkJobStatus    ${jobid0}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m "rhela1 rhelb" ${jobid0}'
    log    ${start1}
    Should Contain    ${start1}    Job <${jobid0}> is being forced to run
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m "rhelb rhela1" ${jobid0}'
    log    ${start2}
    Should Contain    ${start2}    Failed to run the job: Job has already started
    checkJobStatus    ${jobid00}    RUN
    checkJobStatus    ${jobid0}    RUN
    [Teardown]    killJob

case27.(99)jctrl start 作业到一个独占节点。
    [Tags]    p2
    [Setup]    readyTest
    addOrModifyHost    rhela1    3 ()
    addOrModifyHost    rhelb    3 ()
    jadminJhdsSched
    checkClusterStatus
    ${job00}    querySubmitInfo    su user1 -c 'jsub -n 2 -x -R "span[ptile=1]" -q clulow1 sleep 1000'
    ${jobid00}    getJobId    ${job00}
    checkJobStatus    ${jobid00}    RUN
    checkHostStatus    rhela1    closed_Excl
    checkHostStatus    rhelb    closed_Excl
    ${job0}    querySubmitInfo    su user1 -c "jsub -n 2 sleep 1000"
    ${jobid0}    getJobId    ${job0}
    ${job1}    querySubmitInfo    su user1 -c "jsub \ sleep 1000"
    ${jobid1}    getJobId    ${job1}
    checkJobStatus    ${jobid0}    PEND
    checkJobStatus    ${jobid1}    PEND
    ${start1}    runCommand    su jhadmin -c 'jctrl start -m "rhela1 rhelb" ${jobid0}'
    log    ${start1}
    Should Contain    ${start1}    Job <${jobid0}> is being forced to run
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    PEND
    ${start2}    runCommand    su jhadmin -c 'jctrl start -m rhela1 ${jobid1}'
    log    ${start2}
    checkJobStatus    ${jobid0}    RUN
    checkJobStatus    ${jobid1}    RUN
    [Teardown]    modHostInfo    rhela1=1 ()    rhelb= 1 ()
